# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = (
    "ASSIGN COMMA ID LBRACE RBRACE TYPE\n    expression : ID ASSIGN TYPE\n    expression : expression COMMA"
    " expressionexpression : LBRACE expression RBRACE"
)

_lr_action_items = {
    "ID": (
        [
            0,
            3,
            4,
        ],
        [
            2,
            2,
            2,
        ],
    ),
    "LBRACE": (
        [
            0,
            3,
            4,
        ],
        [
            3,
            3,
            3,
        ],
    ),
    "$end": (
        [
            1,
            7,
            8,
            9,
        ],
        [
            0,
            -2,
            -1,
            -3,
        ],
    ),
    "COMMA": (
        [
            1,
            6,
            7,
            8,
            9,
        ],
        [
            4,
            4,
            4,
            -1,
            -3,
        ],
    ),
    "ASSIGN": (
        [
            2,
        ],
        [
            5,
        ],
    ),
    "TYPE": (
        [
            5,
        ],
        [
            8,
        ],
    ),
    "RBRACE": (
        [
            6,
            7,
            8,
            9,
        ],
        [
            9,
            -2,
            -1,
            -3,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if _x not in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "expression": (
        [
            0,
            3,
            4,
        ],
        [
            1,
            6,
            7,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if _x not in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> expression", "S'", 1, None, None, None),
    ("expression -> ID ASSIGN TYPE", "expression", 3, "p_expression", "metadata.py", 43),
    ("expression -> expression COMMA expression", "expression", 3, "p_expression_comma", "metadata.py", 48),
    ("expression -> LBRACE expression RBRACE", "expression", 3, "p_expression_group", "metadata.py", 53),
]
